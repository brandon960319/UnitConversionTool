{"version":3,"sources":["./$_lazy_route_resources|lazy|groupOptions: {}|namespace object","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(() => {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = () => ([]);\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 8255;\nmodule.exports = webpackEmptyAsyncContext;","import {Component, OnInit} from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpParams, HttpResponse, HttpErrorResponse } from '@angular/common/http';\r\nimport {first, map, tap} from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css'],\r\n  providers: [HttpClient]\r\n})\r\nexport class AppComponent implements OnInit{\r\n  title = 'Conversion Utility';\r\n  supportedImperialLengths: string[] = [];\r\n  supportedMetricLengths: string[] = [];\r\n  supportedImperialMass: string[] = [];\r\n  supportedMetricMass: string[] = [];\r\n  supportedImperialTemp: string[] = [];\r\n  supportedMetricTemp: string[] = [];\r\n  TempOutput = '';\r\n  MassOutput = '';\r\n  LenOutput = '';\r\n  TempInput = '';\r\n  MassInput = '';\r\n  LenInput = '';\r\n  fromMass = '';\r\n  toMass = '';\r\n  fromLen = '';\r\n  toLen = '';\r\n  fromTemp = '';\r\n  toTemp = '';\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  ngOnInit(): void {    \r\n\r\n\r\n    this.http.get<string[]>('http://localhost:8083/supportedImperialLengths', { observe: 'response' }).pipe(\r\n      first(),\r\n      tap(result => console.log('Brandon: ', result)),\r\n      map(result => result.body)\r\n    ).subscribe(data => {\r\n      this.supportedImperialLengths = data;\r\n    });\r\n\r\n    this.http.get<string[]>('http://localhost:8083/supportedMetricLengths', { observe: 'response' }).pipe(\r\n      first(),\r\n      tap(result => console.log('Brandon: ', result)),\r\n      map(result => result.body)\r\n    ).subscribe(data => {\r\n      this.supportedMetricLengths = data;\r\n    });\r\n\r\n    this.http.get<string[]>('http://localhost:8083/supportedImperialMass', { observe: 'response' }).pipe(\r\n      first(),\r\n      tap(result => console.log('Brandon: ', result)),\r\n      map(result => result.body)\r\n    ).subscribe(data => {\r\n      this.supportedImperialMass = data;\r\n    });\r\n\r\n    this.http.get<string[]>('http://localhost:8083/supportedMetricMass', { observe: 'response' }).pipe(\r\n      first(),\r\n      tap(result => console.log('Brandon: ', result)),\r\n      map(result => result.body)\r\n    ).subscribe(data => {\r\n      this.supportedMetricMass = data;\r\n    });\r\n\r\n    this.http.get<string[]>('http://localhost:8083/supportedImperialTemp', { observe: 'response' }).pipe(\r\n      first(),\r\n      tap(result => console.log('Brandon: ', result)),\r\n      map(result => result.body)\r\n    ).subscribe(data => {\r\n      this.supportedImperialTemp = data;\r\n    });\r\n\r\n    this.http.get<string[]>('http://localhost:8083/supportedMetricTemp', { observe: 'response' }).pipe(\r\n      first(),\r\n      tap(result => console.log('Brandon: ', result)),\r\n      map(result => result.body)\r\n    ).subscribe(data => {\r\n      this.supportedMetricTemp = data;\r\n    });\r\n  }\r\n\r\n  convTemp(): void {\r\n\r\n    if (this.fromTemp === this.toTemp)\r\n    {\r\n      this.TempOutput = this.TempInput;\r\n    }\r\n    else if (this.fromTemp === 'CELSIUS')\r\n    {\r\n       try {\r\n        this.http.get<any>('http://localhost:8083/celsiusToFarenheit/' + this.TempInput).subscribe(\r\n          result => {\r\n            this.TempOutput = result.message; // Extract value of \"message\" key\r\n          },\r\n          error => {\r\n            console.log('An error occurred:', error);\r\n          }\r\n        );\r\n      } catch (error) {\r\n        console.log('An error occurred:', error);\r\n        // Handle the error here\r\n      }  \r\n    }\r\n    else if (this.fromTemp === 'FARENHEIT')\r\n    {      \r\n      try {\r\n        this.http.get<any>('http://localhost:8083/farenheitToCelsius/' + this.TempInput).subscribe(\r\n          result => {\r\n            this.TempOutput = result.message; // Extract value of \"message\" key\r\n          },\r\n          error => {\r\n            console.log('An error occurred:', error);\r\n          }\r\n        );\r\n      } catch (error) {\r\n        console.log('An error occurred:', error);\r\n        // Handle the error here\r\n      }  \r\n    }\r\n  }\r\n\r\n  convMass(): void {\r\n    try {\r\n      this.http.get<any>('http://localhost:8083/Mass/' + this.MassInput + '/' + this.fromMass + '/' + this.toMass).subscribe(\r\n        result => {\r\n          this.MassOutput = result.message; // Extract value of \"message\" key\r\n        },\r\n        error => {\r\n          console.log('An error occurred:', error);\r\n        }\r\n      );\r\n    } catch (error) {\r\n      console.log('An error occurred:', error);\r\n      // Handle the error here\r\n    }\r\n  }\r\n\r\n  convLen(): void {\r\n    try {\r\n      this.http.get<any>('http://localhost:8083/Length/' + this.LenInput + '/' + this.fromLen + '/' + this.toLen).subscribe(\r\n        result => {\r\n          this.LenOutput = result.message; // Extract value of \"message\" key\r\n        },\r\n        error => {\r\n          console.log('An error occurred:', error);\r\n        }\r\n      );\r\n    } catch (error) {\r\n      console.log('An error occurred:', error);\r\n      // Handle the error here\r\n    }    \r\n  }\r\n}","<h2 style=\"color:#ffffff\">{{title}}</h2>\r\n<div class=\"row\">\r\n    <div class=\"main-menu\">\r\n        <h4>Lengths</h4>\r\n        <div class=\"menu-line\">\r\n            <div class=\"sub-menu\">\r\n                <span>\r\n                    <h5>From:</h5>    \r\n                    <div>\r\n                        <div style=\"display: inline-block;\">\r\n                            <input type=\"number\" [(ngModel)]=\"LenInput\"/>\r\n                            <select id=\"selectedLenFrom\" [(ngModel)]=\"fromLen\">\r\n                                <optgroup label=\"Imperial Lengths\">\r\n                                    <option *ngFor=\"let tmpsupportedImperialLengths of supportedImperialLengths\" value=\"{{tmpsupportedImperialLengths}}\">\r\n                                        {{tmpsupportedImperialLengths}}\r\n                                    </option>\r\n                                </optgroup>\r\n                                <optgroup label=\"Metric Lengths\">\r\n                                    <option *ngFor=\"let tmpsupportedMetricLengths of supportedMetricLengths\" value=\"{{tmpsupportedMetricLengths}}\">\r\n                                        {{tmpsupportedMetricLengths}}\r\n                                    </option>\r\n                                </optgroup>\r\n                            </select>\r\n                        </div>                        \r\n                    </div>  \r\n                </span>\r\n            </div>\r\n            <div class=\"sub-menu\">\r\n                <span>\r\n                    <h5>To:</h5>    \r\n                    <div>\r\n                        <div>                            \r\n                            <select id=\"selectedLenTo\" [(ngModel)]=\"toLen\">\r\n                                <optgroup label=\"Imperial Lengths\">\r\n                                    <option *ngFor=\"let tmpsupportedImperialLengths of supportedImperialLengths\" value=\"{{tmpsupportedImperialLengths}}\">\r\n                                        {{tmpsupportedImperialLengths}}\r\n                                    </option>\r\n                                </optgroup>\r\n                                <optgroup label=\"Metric Lengths\">\r\n                                    <option *ngFor=\"let tmpsupportedMetricLengths of supportedMetricLengths\" value=\"{{tmpsupportedMetricLengths}}\">\r\n                                        {{tmpsupportedMetricLengths}}\r\n                                    </option>\r\n                                </optgroup>\r\n                            </select>\r\n                            <input type=\"number\" disabled=\"disabled\" [(ngModel)]=\"LenOutput\" />\r\n                        </div>\r\n                    </div>\r\n                </span>\r\n            </div>\r\n        </div>        \r\n        <div>\r\n            <button (click)=\"convLen()\">Convert Lengths</button>\r\n        </div>    \r\n    </div>\r\n    <p></p>\r\n    <div class=\"main-menu\">   \r\n        <h4>Mass</h4> \r\n        <div class=\"menu-line\">\r\n            <div class=\"sub-menu\">\r\n                <span>\r\n                    <h5>From:</h5>       \r\n                    <div>\r\n                        <div style=\"display: inline-block;\">\r\n                            <input type=\"number\" [(ngModel)]=\"MassInput\" />\r\n                            <select id=\"selectedMassFrom\" [(ngModel)]=\"fromMass\">\r\n                                <optgroup label=\"Imperial Mass\">\r\n                                    <option *ngFor=\"let tmpsupportedImperialMass of supportedImperialMass\" value=\"{{tmpsupportedImperialMass}}\">\r\n                                        {{tmpsupportedImperialMass}}\r\n                                    </option>\r\n                                </optgroup>\r\n                                <optgroup label=\"Metric Mass\">\r\n                                    <option *ngFor=\"let tmpsupportedMetricMass of supportedMetricMass\" value=\"{{tmpsupportedMetricMass}}\">\r\n                                        {{tmpsupportedMetricMass}}\r\n                                    </option>\r\n                                </optgroup>\r\n                            </select>\r\n                        </div>\r\n                    </div>                     \r\n                </span>        \r\n            </div>\r\n            <div class=\"sub-menu\">\r\n                <span>\r\n                    <h5>To:</h5> \r\n                    <div>\r\n                        <div>                            \r\n                            <select id=\"selectedMassTo\"  [(ngModel)]=\"toMass\">\r\n                                <optgroup label=\"Imperial Mass\">\r\n                                    <option *ngFor=\"let tmpsupportedImperialMass of supportedImperialMass\" value=\"{{tmpsupportedImperialMass}}\">\r\n                                        {{tmpsupportedImperialMass}}\r\n                                    </option>\r\n                                </optgroup>\r\n                                <optgroup label=\"Metric Mass\">\r\n                                    <option *ngFor=\"let tmpsupportedMetricMass of supportedMetricMass\" value=\"{{tmpsupportedMetricMass}}\">\r\n                                        {{tmpsupportedMetricMass}}\r\n                                    </option>\r\n                                </optgroup>\r\n                            </select>   \r\n                        <input type=\"number\" disabled=\"disabled\" [(ngModel)]=\"MassOutput\" />\r\n                        </div>\r\n                    </div>\r\n                </span>\r\n            </div>\r\n        </div>\r\n        <div>\r\n            <button (click)=\"convMass()\">Convert Mass</button>\r\n        </div>    \r\n    </div>\r\n    <p></p>\r\n    <div class=\"main-menu\">   \r\n        <h4>Temperature</h4> \r\n        <div class=\"menu-line\">\r\n            <div class=\"sub-menu\">\r\n                <span>\r\n                    <h5>From:</h5>       \r\n                    <div>\r\n                        <div style=\"display: inline-block;\">\r\n                            <input type=\"number\" [(ngModel)]=\"TempInput\" />\r\n                            <select  id=\"selectedTempFrom\" [(ngModel)]=\"fromTemp\">\r\n                                <optgroup label=\"Imperial Temperature\">\r\n                                    <option *ngFor=\"let tmpsupportedImperialTemp of supportedImperialTemp\" value=\"{{tmpsupportedImperialTemp}}\">\r\n                                        {{tmpsupportedImperialTemp}}\r\n                                    </option>\r\n                                </optgroup>\r\n                                <optgroup label=\"Metric Temperature\">\r\n                                    <option *ngFor=\"let tmpsupportedMetricTemp of supportedMetricTemp\" value=\"{{tmpsupportedMetricTemp}}\">\r\n                                        {{tmpsupportedMetricTemp}}\r\n                                    </option>\r\n                                </optgroup>\r\n                            </select>\r\n                        </div>\r\n                    </div>                     \r\n                </span>        \r\n            </div>\r\n            <div class=\"sub-menu\">\r\n                <span>\r\n                    <h5>To:</h5> \r\n                    <div>\r\n                        <div>                            \r\n                            <select id=\"selectedTempTo\" [(ngModel)]=\"toTemp\">\r\n                                <optgroup label=\"Imperial Temperature\">\r\n                                    <option *ngFor=\"let tmpsupportedImperialTemp of supportedImperialTemp\" value=\"{{tmpsupportedImperialTemp}}\">\r\n                                        {{tmpsupportedImperialTemp}}\r\n                                    </option>\r\n                                </optgroup>\r\n                                <optgroup label=\"Metric Temperature\">\r\n                                    <option *ngFor=\"let tmpsupportedMetricTemp of supportedMetricTemp\" value=\"{{tmpsupportedMetricTemp}}\">\r\n                                        {{tmpsupportedMetricTemp}}\r\n                                    </option>\r\n                                </optgroup>\r\n                            </select>   \r\n                        <input type=\"number\" disabled=\"disabled\" [(ngModel)]=\"TempOutput\" />\r\n                        </div>\r\n                    </div>\r\n                </span>\r\n            </div>\r\n        </div>\r\n        <div>\r\n            <button (click)=\"convTemp()\">Convert Temperature</button>\r\n        </div>    \r\n    </div>\r\n</div>\r\n\r\n","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { AppComponent } from './app.component';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    HttpClientModule,\r\n    FormsModule,\r\n    BrowserAnimationsModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":"webpack:///"}